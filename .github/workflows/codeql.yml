name: "CodeQL Advanced"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "28 21 * * 4"

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: c-cpp
            build-mode: manual

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      - if: matrix.language == 'c-cpp'
        name: Manual Build for C and C++
        shell: bash
        run: |
          echo "Building C and C++ projects manually..."
          cd C && make || echo "No Makefile in C directory"
          cd ../CPP && make || echo "No Makefile in CPP directory"
          echo "Running clangd for static analysis..."
          clangd --check=C/*.c || echo "clangd check failed for C files"
          clangd --check=CPP/*.cpp || echo "clangd check failed for C++ files"
          echo "Running valgrind for memory analysis..."
          valgrind ./C/your_binary || echo "Valgrind failed for C binary"
          valgrind ./CPP/your_binary || echo "Valgrind failed for C++ binary"

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
